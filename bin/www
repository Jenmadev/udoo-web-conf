#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('udoo-cfg:server');
var http = require('http');
var server = http.createServer(app);
var fs = require('fs');

fs.readFile('/etc/udoo-web-conf/port', 'utf8', function (err,data) {
    var port;
    if (err) {
        port = 80;
    } else {
        port = normalizePort(data);
    }
    
    app.set('port', port);
    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);

    io = require('socket.io')(server);

    require('../controllers/index');
    require('../controllers/arduino');
});


function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
